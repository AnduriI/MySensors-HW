June 2015 (scalz)
- Original DCBooster 3v replaced by MCP1640
- LM8364 2v supervisor added
- Different reference components change (mosfet SI2399)
- arduino pin routing changed (irq for 2v supervisor
- power connector removed as I don't need it for my needs
- jumper for vbat_sample removed. Maybe it will come back. Need to test
- Eagle Files

June 10 2015 (Patrick Fallberg):
    First version of my generic MySensors node
    
    Features:
    - Switchable battery level measurement
    - By-passable 3.3V step-up regulator
    - Possibility to disable sensor power rail
    - Optional additional 5V step-up regulator for sensors
    - 2.5mm DC jack power supply footprint
    - 2mm pitch JST connector for LiPo batteries
    - Both RF24 and RF69 footprints and possibility for interrupt connectivity
    - External SPI flash
    - AVR ISP programming header
    - ATSHA204A authenticatior footprint
    - On-board I2C pullups
    - On-board sensor ports (all with 3.3 and 5V rails):
      - 1 PWM enabled sensor port
      - 2 HW interrupt sensor ports (1 optionally taken by radio)
      - 2 generic I/O sensor ports that also provide HW UART
      - 1 SPI header
      - 2 Analog sensor ports
      - 2 I2C sensor ports
    
    HW dependencies:
    - KiCad
    - Non-standard libraries:
      - Mysensors repositories (https://github.com/mysensors-kicad)
      - Walter Lain's KiCad libraries (http://smisioto.no-ip.org/elettronica/kicad/kicad-en.htm)
    
    Known issues:
    - 3.3V regulator has an unterminated EN-signal. That means it could
      start up in "off" state which mean that if battery level is too high
      (>4.1V) SPI flash could fry. If battery level is too low (<1.8V),
      MCU might not start in order to enable the regulator.
      A workaround if this situation is undesirable is to solder a 1M Ohm
      resistor between REG_BYPASS and +BATT signals.

